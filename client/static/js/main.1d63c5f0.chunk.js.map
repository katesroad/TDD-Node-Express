{"version":3,"sources":["assets/profile.png","assets/hoaxify.png","serviceWorker.js","components/Input.js","components/ButtonWithProgress.js","shared/ApiProgress.js","api/apiCalls.js","pages/UserSignupPage.js","redux/authActions.js","redux/Constants.js","components/Spinner.js","pages/LoginPage.js","components/LanguageSelector.js","components/ProfileImageWithDefault.js","components/UserListItem.js","components/UserList.js","components/AutoUploadImage.js","components/HoaxSubmit.js","components/Modal.js","components/HoaxView.js","components/HoaxFeed.js","pages/HomePage.js","components/ProfileCard.js","pages/UserPage.js","pages/PasswordResetRequestPage.js","pages/PasswordResetPage.js","components/TopBar.js","container/App.js","redux/authReducer.js","redux/configureStore.js","i18n.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","eject","signup","body","post","activate","token","getUsers","page","size","get","setAuthorizationHeader","authorizationHeaderValue","email","password","isLoggedIn","btoa","defaults","headers","updateUser","username","put","postHoax","hoax","getHoaxes","path","getOldHoaxes","id","getNewHoaxes","postHoaxAttachment","attachment","deleteHoax","delete","deleteUser","requestReset","putPassword","UserSignupPage","passwordRepeatError","passwordRepeat","form","setForm","errors","setErrors","externalFailure","setExternalFailure","readyForActivation","setReadyForActivation","event","target","value","previousErrors","previousForm","t","useTranslation","onClickSignup","a","preventDefault","errorStatus","status","data","validationErrors","usernameError","emailError","passwordError","pendingApiCallSignup","pendingApiCallLogin","style","fontSize","address","to","logoutSuccess","dispatch","console","log","loginSuccess","authState","payload","updateSuccess","image","loginHandler","credentials","creds","Spinner","LoginPage","setEmail","setPassword","setError","accountStatus","setAccountStatus","useDispatch","sendActivation","setTimeout","search","substring","message","onClickLogin","history","push","buttonEnabled","LanguageSelector","supportedLanguages","setSupportedLanguages","then","res","catch","err","i18n","onChangeLanguage","language","changeLanguage","map","lang","key","src","flag","alt","cursor","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","length","onError","UserListItem","user","width","height","UserList","content","totalPages","setPage","loadFailure","setLoadFailure","loadUsers","users","currentPage","first","last","actionDiv","previousPage","nextPage","AutoUploadImage","uploading","position","opacity","HoaxSubmit","useSelector","store","focused","setFocused","setHoax","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClickHoaxify","fileAttachment","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","files","fileReader","FileReader","onloadend","result","readAsDataURL","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","HoaxView","loggedInUser","onDeleteHoax","timestamp","userid","modalVisible","setModalVisible","onClickDelete","formatted","format","ownedByLoggedInUser","fileType","filename","HoaxFeed","number","hoaxPage","setHoaxPage","newHoaxCount","setNewHoaxCount","useParams","initialHoaxLoadProgress","lastHoaxId","firstHoaxId","lastHoaxIndex","oldHoaxPath","loadOldHoaxesProgress","newHoaxPath","loadNewHoaxesProgress","previousHoaxPage","loadHoaxes","loadOldHoaxes","loadNewHoaxes","onDeleteHoaxSuccess","filter","HomePage","ProfileCard","inEditMode","setInEditMode","updatedUsername","setUpdatedUsername","loggedInUserId","setUser","editable","setEditable","setValidationErrors","useHistory","previousValidationErrors","pendingApiCallDeleteUser","onClickSave","split","upToDate","onClickDeleteUser","imageError","UserPage","notFound","setNotFound","loadUser","PasswordResetPage","errorMessage","setErrorMessage","validationErr","setValidationErr","successMessage","setSuccessMessage","onClickReset","e","r","passwordUpdated","setPasswordUpdated","redirectTimer","useRef","current","clearTimeout","passwordResetToken","TopBar","menuArea","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","contains","links","dropDownClass","ref","logo","App","validatingLogin","setValidatingLogin","s","c","exact","component","PasswordResetRequestPage","defaultState","authReducer","state","action","secureLs","SecureLS","configureStore","initialState","hoaxAuth","getStateFromStorage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","initReactI18next","Backend","init","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","index","ReactDOM","render","fallback","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d63c5f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.926fda93.png\";","module.exports = __webpack_public_path__ + \"static/media/hoaxify.2dcb4821.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Input = props => {\r\n  const { label, error, name, onChange, type, defaultValue } = props;\r\n  let className = 'form-control';\r\n\r\n  if (type === 'file') {\r\n    className += '-file';\r\n  }\r\n\r\n  if (error !== undefined) {\r\n    className += ' is-invalid';\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue} />\r\n      <div className=\"invalid-feedback\">{props.error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst ButtonWithProgress = props => {\r\n  const { onClick, pendingApiCall, disabled, text, className } = props;\r\n\r\n  return (\r\n    <button className={className || 'btn btn-primary'} onClick={onClick} disabled={disabled}>\r\n      {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>} {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonWithProgress;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n  const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (method, url, inProgress) => {\r\n      if (method !== apiMethod) {\r\n        return;\r\n      }\r\n      if (strictPath && url === apiPath) {\r\n        setPendingApiCall(inProgress);\r\n      } else if (!strictPath && url.startsWith(apiPath)) {\r\n        setPendingApiCall(inProgress);\r\n      }\r\n    };\r\n\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use(request => {\r\n        const { url, method } = request;\r\n        updateApiCallFor(method, url, true);\r\n        return request;\r\n      });\r\n\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        response => {\r\n          const { url, method } = response.config;\r\n          updateApiCallFor(method, url, false);\r\n          return response;\r\n        },\r\n        error => {\r\n          const { url, method } = error.config;\r\n          updateApiCallFor(method, url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    const unregisterInterceptors = () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    registerInterceptors();\r\n\r\n    return function unmount() {\r\n      unregisterInterceptors();\r\n    };\r\n  }, [apiPath, apiMethod, strictPath]);\r\n\r\n  return pendingApiCall;\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const signup = body => {\r\n  return axios.post('/api/1.0/users', body);\r\n};\r\n\r\nexport const activate = token => {\r\n  return axios.post('/api/1.0/users/token/'+token);\r\n}\r\n\r\nexport const login = creds => {\r\n  return axios.post('/api/1.0/auth', {...creds});\r\n};\r\n\r\nexport const logout = () => {\r\n  return axios.post('/api/1.0/logout');\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n  axios.defaults.headers['accept-language'] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n  return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ email, password, token, isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n    let authorizationHeaderValue;\r\n    if(token) {\r\n      authorizationHeaderValue = `Bearer ${token}`\r\n    } else {\r\n      authorizationHeaderValue = `Basic ${btoa(email + ':' + password)}`;\r\n    }\r\n    axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n  } else {\r\n    delete axios.defaults.headers['Authorization'];\r\n  }\r\n};\r\n\r\nexport const getUser = username => {\r\n  return axios.get(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const updateUser = (username, body) => {\r\n  return axios.put(`/api/1.0/users/${username}`, body);\r\n};\r\n\r\nexport const postHoax = hoax => {\r\n  return axios.post('/api/1.0/hoaxes', hoax);\r\n};\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n  return axios.get(path + page);\r\n};\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}` : `/api/1.0/hoaxes/${id}`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?count=true` : `/api/1.0/hoaxes/${id}?count=true`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after` : `/api/1.0/hoaxes/${id}?direction=after`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const postHoaxAttachment = attachment => {\r\n  return axios.post('/api/1.0/hoaxes/attachments', attachment);\r\n};\r\n\r\nexport const deleteHoax = id => {\r\n  return axios.delete(`/api/1.0/hoaxes/${id}`);\r\n};\r\n\r\nexport const deleteUser = id => {\r\n  return axios.delete(`/api/1.0/users/${id}`);\r\n};\r\n\r\nexport const requestReset = email => {\r\n  return axios.post('/api/1.0/user/password', {email});\r\n}\r\n\r\nexport const putPassword = body => {\r\n  return axios.put('/api/1.0/user/password', body);\r\n}","import React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { signup } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    email: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [externalFailure, setExternalFailure] = useState(false);\r\n  const [readyForActivation, setReadyForActivation] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }));\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { username, email, password } = form;\r\n\r\n    const body = {\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n    setExternalFailure();\r\n    setErrors({});\r\n\r\n    try {\r\n      await signup(body);\r\n      setReadyForActivation(true);\r\n    } catch (error) {\r\n      const errorStatus = error.response.status;\r\n      if(errorStatus === 400) { // validation\r\n        setErrors(error.response.data.validationErrors);\r\n      } else if (errorStatus === 502) {\r\n        setExternalFailure(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { username: usernameError, email: emailError, password: passwordError } = errors;\r\n  const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\r\n  const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t('Password mismatch');\r\n  }\r\n\r\n  if (readyForActivation) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-success text-center\">\r\n          <div>\r\n            <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n              done_outline\r\n            </i>\r\n          </div>\r\n          {t('Activation E-mail sent', {address: form.email})}\r\n        </div>\r\n      </div>\r\n        )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\r\n        <h1 className=\"text-center card-header\">{t('Sign Up')}</h1>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange} />\r\n            <Input name=\"email\" label={t('E-mail')} error={emailError} onChange={onChange} />\r\n            <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n            <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n            {externalFailure && (\r\n              <div className=\"alert alert-danger text-center\">\r\n                <div>\r\n                  <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n                    error\r\n                  </i>\r\n                </div>\r\n                {t('E-mail verification failure')}\r\n              </div>\r\n            )}\r\n            <div className=\"text-center\">\r\n              <ButtonWithProgress\r\n                onClick={onClickSignup}\r\n                disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n                pendingApiCall={pendingApiCall}\r\n                text={t('Sign Up')}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"text-center mt-3\">\r\n            <Link to=\"/login\" >{t('Already have an account?')}</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n","import * as ACTIONS from './Constants';\r\nimport { login, logout } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = () => {\r\n  return async function(dispatch) {\r\n    try {\r\n      await logout();\r\n    } catch (err) {\r\n      console.log('backend not ready with logout')\r\n    }\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT_SUCCESS\r\n    })\r\n  }\r\n};\r\n\r\nexport const loginSuccess = authState => {\r\n  return {\r\n    type: ACTIONS.LOGIN_SUCCESS,\r\n    payload: authState\r\n  };\r\n};\r\n\r\nexport const updateSuccess = ({ username, image }) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_SUCCESS,\r\n    payload: {\r\n      username,\r\n      image\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginHandler = credentials => {\r\n  return async function(dispatch) {\r\n    const response = await login(credentials);\r\n    const authState = {\r\n      id: response.data.id,\r\n      username: response.data.username,\r\n      image: response.data.image,\r\n      token: response.data.token,\r\n      ...credentials\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    return response;\r\n  };\r\n};\r\n","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"spinner-border text-black-50\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler } from '../redux/authActions';\r\nimport { activate } from '../api/apiCalls';\r\nimport Spinner from '../components/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = props => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const [accountStatus, setAccountStatus] = useState('done') // active, failed\r\n  const pendingApiCall = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n\r\n    const sendActivation = async (token) => {\r\n      try {\r\n        await activate(token)\r\n        setAccountStatus('active');\r\n        setTimeout(() => {\r\n          setAccountStatus('done');\r\n        }, 5000)\r\n      } catch (err) {\r\n        setAccountStatus('failed')\r\n      }\r\n    }\r\n    if(props.location.search){\r\n      setAccountStatus('activating')\r\n      sendActivation(props.location.search.substring(7));\r\n    } else {\r\n      setAccountStatus('done');\r\n    }\r\n  }, [props.location.search])\r\n\r\n  useEffect(() => {\r\n    setError(undefined);\r\n  }, [email, password]);\r\n\r\n  const onClickLogin = async event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    setError(undefined);\r\n    try {\r\n      await dispatch(loginHandler(creds));\r\n      push('/');\r\n    } catch (apiError) {\r\n      setError(apiError.response.data.message);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  if(accountStatus === 'failed') {\r\n    return (\r\n    <div className=\"container\">\r\n      <div className=\"alert alert-danger text-center\">\r\n        <div>\r\n          <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n            error\r\n          </i>\r\n        </div>\r\n        {t('Account activation failure')}\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  let message;\r\n  if(accountStatus === 'activating') {\r\n    message = (\r\n      <div className=\"alert alert-info text-center\">\r\n        <Spinner />\r\n        <span>{t('Activation in progress')}</span>\r\n      </div>\r\n    )\r\n  } else if (accountStatus === 'active'){\r\n    message = (\r\n      <div className=\"alert alert-success text-center\">\r\n        <div>\r\n          <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n            done_outline\r\n          </i>\r\n        </div>\r\n        <span>{t('Your account is activated')}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n\r\n  const buttonEnabled = email && password;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {message && message}\r\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\r\n        <h1 className=\"text-center card-header\">{t('Login')}</h1>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <Input label={t('E-Mail')} onChange={event => setEmail(event.target.value)} />\r\n            <Input label={t('Password')} type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            <div className=\"text-center\">\r\n              <ButtonWithProgress onClick={onClickLogin} disabled={!buttonEnabled || pendingApiCall} pendingApiCall={pendingApiCall} text={t('Login')} />\r\n            </div>\r\n          </form>\r\n          <div className=\"text-center mt-3\">\r\n            <Link to=\"/password-reset-request\" >{t('Forget password?')}</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { changeLanguage } from '../api/apiCalls';\r\nimport axios from 'axios';\r\n\r\nconst LanguageSelector = props => {\r\n\r\n  const [supportedLanguages, setSupportedLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/locales/supported-languages.json').then(res => {\r\n      setSupportedLanguages(res.data);\r\n    }).catch(err => {\r\n    })\r\n  }, [])\r\n\r\n  const { i18n } = useTranslation();\r\n\r\n  const onChangeLanguage = language => {\r\n    i18n.changeLanguage(language);\r\n    changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {supportedLanguages.map(lang => {\r\n        return <img key={lang.language} src={lang.flag} alt=\"flag\" onClick={() => onChangeLanguage(lang.language)} style={{ cursor: 'pointer' }}/>\r\n      })}\r\n      {/* <img\r\n        src=\"https://www.countryflags.io/tr/flat/24.png\"\r\n        alt=\"Turkish Flag\"\r\n        onClick={() => onChangeLanguage('tr')}\r\n        style={{ cursor: 'pointer' }}\r\n      ></img>\r\n      <img src=\"https://www.countryflags.io/us/flat/24.png\" alt=\"USA Flag\" onClick={() => onChangeLanguage('en')} style={{ cursor: 'pointer' }}></img> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png';\r\n\r\nconst ProfileImageWithDefault = props => {\r\n  const { image, tempimage } = props;\r\n\r\n  let imageSource = defaultPicture;\r\n  if (image) {\r\n    if(image.length > 64) {// base64 \r\n      imageSource = 'data:image/png;base64,' + image;\r\n    } else {\r\n      imageSource = 'images/' + image;\r\n    }\r\n  }\r\n  return (\r\n    <img\r\n      alt={`Profile`}\r\n      src={tempimage || imageSource}\r\n      {...props}\r\n      onError={event => {\r\n        // event.target.src = defaultPicture;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileImageWithDefault;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst UserListItem = props => {\r\n  const { user } = props;\r\n  const { id, username, image } = user;\r\n\r\n  return (\r\n    <Link to={`/user/${id}`} className=\"list-group-item list-group-item-action\">\r\n      <ProfileImageWithDefault className=\"rounded-circle\" width=\"32\" height=\"32\" alt={`${username} profile`} image={image} />\r\n      <span className=\"pl-2\">\r\n        {username}\r\n      </span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getUsers } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst UserList = () => {\r\n  const [page, setPage] = useState({\r\n    content: [],\r\n    size: 3,\r\n    page: 0,\r\n    totalPages: 0,\r\n  });\r\n\r\n  const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress(\"get\", \"/api/1.0/users?page\");\r\n\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const onClickNext = () => {\r\n    const nextPage = page.page + 1;\r\n    loadUsers(nextPage);\r\n  };\r\n\r\n  const onClickPrevious = () => {\r\n    const previousPage = page.page - 1;\r\n    loadUsers(previousPage);\r\n  };\r\n\r\n  const loadUsers = async (page) => {\r\n    setLoadFailure(false);\r\n    try {\r\n      const response = await getUsers(page);\r\n      setPage(response.data);\r\n    } catch (error) {\r\n      setLoadFailure(true);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  const { content: users, page: currentPage, totalPages } = page;\r\n\r\n  const first = currentPage === 0;\r\n  const last = totalPages !== 0 ? currentPage === totalPages - 1 : true;\r\n\r\n  let actionDiv = (\r\n    <div>\r\n      {first === false && (\r\n        <button className=\"btn btn-sm btn-light\" onClick={onClickPrevious}>\r\n          {t(\"Previous\")}\r\n        </button>\r\n      )}\r\n      {last === false && (\r\n        <button\r\n          className=\"btn btn-sm btn-light float-right\"\r\n          onClick={onClickNext}\r\n        >\r\n          {t(\"Next\")}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (pendingApiCall) {\r\n    actionDiv = <Spinner />;\r\n  }\r\n\r\n  let content = <div/>;\r\n  if(pendingApiCall && users.length === 0) {\r\n    content = <Spinner />;\r\n  } else {\r\n    content = users.length > 0 && (\r\n      <div className=\"card\">\r\n        <h3 className=\"card-header text-center\">{t(\"Users\")}</h3>\r\n        <div className=\"list-group-flush\">\r\n          {users.map((user) => (\r\n            <UserListItem key={user.username} user={user} />\r\n          ))}\r\n        </div>\r\n        {actionDiv}\r\n        {loadFailure && (\r\n          <div className=\"text-center text-danger\">{t(\"Load Failure\")}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\nimport './AutoUploadImage.css';\r\n\r\nconst AutoUploadImage = ({ image, uploading }) => {\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <img className=\"img-thumbnail\" src={image} alt=\"hoax-attachment\" />\r\n      <div className=\"overlay\" style={{ opacity: uploading ? 1 : 0 }}>\r\n        <div className=\"d-flex justify-content-center h-100\">\r\n          <div className=\"spinner-border text-light m-auto\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoUploadImage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { postHoax, postHoaxAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst HoaxSubmit = () => {\r\n  const { image } = useSelector(store => ({ image: store.image }));\r\n  const [focused, setFocused] = useState(false);\r\n  const [hoax, setHoax] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [newImage, setNewImage] = useState();\r\n  const [attachmentId, setAttachmentId] = useState();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!focused) {\r\n      setHoax('');\r\n      setErrors({});\r\n      setNewImage();\r\n      setAttachmentId();\r\n    }\r\n  }, [focused]);\r\n\r\n  useEffect(() => {\r\n    setErrors(err => ({\r\n      ...err,\r\n      content: undefined\r\n    }));\r\n  }, [hoax]);\r\n\r\n  const pendingApiCall = useApiProgress('post', '/api/1.0/hoaxes', true);\r\n  const pendingFileUpload = useApiProgress('post', '/api/1.0/hoaxes/attachments', true);\r\n\r\n  const onClickHoaxify = async () => {\r\n    const body = {\r\n      content: hoax,\r\n      fileAttachment: attachmentId\r\n    };\r\n\r\n    try {\r\n      await postHoax(body);\r\n      setFocused(false);\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      } else {\r\n        console.log('not implemented')\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n      uploadFile(file);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const uploadFile = async file => {\r\n    const attachment = new FormData();\r\n    attachment.append('file', file);\r\n    try {\r\n      const response = await postHoaxAttachment(attachment);\r\n      setAttachmentId(response.data.id);\r\n    } catch (error) {\r\n      setNewImage(undefined)\r\n      setErrors(err => ({\r\n        ...err,\r\n        image: error.response.data.message,\r\n      }))\r\n    }\r\n  };\r\n\r\n  let textAreaClass = 'form-control';\r\n  if (errors.content) {\r\n    textAreaClass += ' is-invalid';\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-1 flex-row\">\r\n      <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle mr-1\" />\r\n      <div className=\"flex-fill\">\r\n        <textarea\r\n          className={textAreaClass}\r\n          rows={focused ? '3' : '1'}\r\n          onFocus={() => setFocused(true)}\r\n          onChange={event => setHoax(event.target.value)}\r\n          value={hoax}\r\n        />\r\n        <div className=\"invalid-feedback\">{errors.content}</div>\r\n        {focused && (\r\n          <>\r\n            {!newImage && <Input type=\"file\" onChange={onChangeFile} error={errors.image} />}\r\n            {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload} />}\r\n            <div className=\"text-right mt-1\">\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary\"\r\n                onClick={onClickHoaxify}\r\n                text=\"Hoaxify\"\r\n                pendingApiCall={pendingApiCall}\r\n                disabled={pendingApiCall || pendingFileUpload}\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setFocused(false)} disabled={pendingApiCall || pendingFileUpload}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxSubmit;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = props => {\r\n  const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = 'modal fade';\r\n  if (visible) {\r\n    className += ' show d-block';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n          </div>\r\n          <div className=\"modal-body\">{message}</div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel}>\r\n              {t('Cancel')}\r\n            </button>\r\n            <ButtonWithProgress\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickOk}\r\n              pendingApiCall={pendingApiCall}\r\n              disabled={pendingApiCall}\r\n              text={okButton}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteHoax } from '../api/apiCalls';\r\nimport Modal from './Modal';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n\r\nconst HoaxView = props => {\r\n  const loggedInUser = useSelector(store => store.username);\r\n  const { hoax, onDeleteHoax } = props;\r\n  const { user, content, timestamp, fileAttachment, id } = hoax;\r\n  const { id : userid, username, image } = user;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const pendingApiCall = useApiProgress('delete', `/api/1.0/hoaxes/${id}`, true);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const onClickDelete = async () => {\r\n    await deleteHoax(id);\r\n    onDeleteHoax(id);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const formatted = format(timestamp, i18n.language);\r\n\r\n  const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card p-1\">\r\n        <div className=\"d-flex\">\r\n          <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-1\" />\r\n          <div className=\"flex-fill m-auto pl-2\">\r\n            <Link to={`/user/${userid}`} className=\"text-dark\">\r\n              <h6 className=\"d-inline\"><strong>\r\n                {username}\r\n              </strong>\r\n              </h6>\r\n              <span> - </span>\r\n              <span>{formatted}</span>\r\n            </Link>\r\n          </div>\r\n          {ownedByLoggedInUser && (\r\n            <button className=\"btn btn-delete-link btn-sm\" onClick={() => setModalVisible(true)}>\r\n              <i className=\"material-icons\">delete_outline</i>\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"pl-5\">{content}</div>\r\n        {fileAttachment && (\r\n          <div className=\"pl-5\">\r\n            {fileAttachment.fileType && fileAttachment.fileType.startsWith('image') && (\r\n              <img className=\"img-fluid\" src={'attachments/' + fileAttachment.filename} alt={content} />\r\n            )}\r\n            {(!fileAttachment.fileType || !fileAttachment.fileType.startsWith('image')) && <strong>Hoax has unknown attachment</strong>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete Hoax')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDelete}\r\n        message={\r\n          <div>\r\n            <div>\r\n              <strong>{t('Are you sure to delete hoax?')}</strong>\r\n            </div>\r\n            <span>{content}</span>\r\n          </div>\r\n        }\r\n        pendingApiCall={pendingApiCall}\r\n        okButton={t('Delete Hoax')}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HoaxView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getHoaxes, getOldHoaxes, getNewHoaxes } from '../api/apiCalls';\r\nimport { useTranslation } from 'react-i18next';\r\nimport HoaxView from './HoaxView';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst HoaxFeed = () => {\r\n  const [hoaxPage, setHoaxPage] = useState({ content: [], last: true, number: 0 });\r\n  const [newHoaxCount, setNewHoaxCount] = useState(0);\r\n  const { t } = useTranslation();\r\n  const { userid } = useParams();\r\n\r\n  const path = userid ? `/api/1.0/users/${userid}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n  const initialHoaxLoadProgress = useApiProgress('get', path);\r\n\r\n  let lastHoaxId = 0;\r\n  let firstHoaxId = 0;\r\n  if (hoaxPage.content.length > 0) {\r\n    firstHoaxId = hoaxPage.content[0].id;\r\n\r\n    const lastHoaxIndex = hoaxPage.content.length - 1;\r\n    lastHoaxId = hoaxPage.content[lastHoaxIndex].id;\r\n  }\r\n  const oldHoaxPath = userid ? `/api/1.0/users/${userid}/hoaxes/${lastHoaxId}` : `/api/1.0/hoaxes/${lastHoaxId}`;\r\n  const loadOldHoaxesProgress = useApiProgress('get', oldHoaxPath, true);\r\n\r\n  const newHoaxPath = userid\r\n    ? `/api/1.0/users/${userid}/hoaxes/${firstHoaxId}?direction=after`\r\n    : `/api/1.0/hoaxes/${firstHoaxId}?direction=after`;\r\n\r\n  const loadNewHoaxesProgress = useApiProgress('get', newHoaxPath, true);\r\n\r\n  useEffect(() => {\r\n    const loadHoaxes = async page => {\r\n      try {\r\n        const response = await getHoaxes(userid, page);\r\n        setHoaxPage(previousHoaxPage => ({\r\n          ...response.data,\r\n          content: [...previousHoaxPage.content, ...response.data.content]\r\n        }));\r\n      } catch (error) {}\r\n    };\r\n    loadHoaxes();\r\n  }, [userid]);\r\n\r\n  const loadOldHoaxes = async () => {\r\n    const response = await getOldHoaxes(lastHoaxId, userid);\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...response.data,\r\n      content: [...previousHoaxPage.content, ...response.data.content]\r\n    }));\r\n  };\r\n\r\n  const loadNewHoaxes = async () => {\r\n    const response = await getNewHoaxes(firstHoaxId, userid);\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...previousHoaxPage,\r\n      content: [...response.data, ...previousHoaxPage.content]\r\n    }));\r\n    setNewHoaxCount(0);\r\n  };\r\n\r\n  const onDeleteHoaxSuccess = id => {\r\n    setHoaxPage(previousHoaxPage => ({\r\n      ...previousHoaxPage,\r\n      content: previousHoaxPage.content.filter(hoax => hoax.id !== id)\r\n    }));\r\n  };\r\n\r\n  const { content, page, totalPages } = hoaxPage;\r\n\r\n  const last = page === totalPages - 1;\r\n\r\n  if (content.length === 0) {\r\n    return <div className=\"alert alert-secondary text-center\">{initialHoaxLoadProgress ? <Spinner /> : t('There are no hoaxes')}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {newHoaxCount > 0 && (\r\n        <div\r\n          className=\"alert alert-secondary text-center mb-1\"\r\n          style={{ cursor: loadNewHoaxesProgress ? 'not-allowed' : 'pointer' }}\r\n          onClick={loadNewHoaxesProgress ? () => {} : loadNewHoaxes}\r\n        >\r\n          {loadNewHoaxesProgress ? <Spinner /> : t('There are new hoaxes')}\r\n        </div>\r\n      )}\r\n      {content.map(hoax => {\r\n        return <HoaxView key={hoax.id} hoax={hoax} onDeleteHoax={onDeleteHoaxSuccess} />;\r\n      })}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          style={{ cursor: loadOldHoaxesProgress ? 'not-allowed' : 'pointer' }}\r\n          onClick={loadOldHoaxesProgress ? () => {} : loadOldHoaxes}\r\n        >\r\n          {loadOldHoaxesProgress ? <Spinner /> : t('Load old hoaxes')}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoaxFeed;\r\n","import React from 'react';\r\nimport UserList from '../components/UserList';\r\nimport HoaxSubmit from '../components/HoaxSubmit';\r\nimport { useSelector } from 'react-redux';\r\nimport HoaxFeed from '../components/HoaxFeed';\r\n\r\nconst HomePage = () => {\r\n  const { isLoggedIn } = useSelector(store => ({ isLoggedIn: store.isLoggedIn }));\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {isLoggedIn && (\r\n            <div className=\"mb-1\">\r\n              <HoaxSubmit />\r\n            </div>\r\n          )}\r\n          <HoaxFeed />\r\n        </div>\r\n        <div className=\"col\">\r\n          <UserList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { updateUser, deleteUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { updateSuccess, logoutSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedUsername, setUpdatedUsername] = useState();\r\n  const { id: loggedInUserId } = useSelector(store => ({ id: store.id }));\r\n  const { userid } = useParams();\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line eqeqeq\r\n    setEditable(userid == loggedInUserId);\r\n  }, [loggedInUserId, userid]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      username: undefined\r\n    }));\r\n  }, [updatedUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      image: undefined\r\n    }));\r\n  }, [newImage]);\r\n\r\n  const { id, username, image } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${id}`, true);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedUsername(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedUsername(username);\r\n    }\r\n  }, [inEditMode, username]);\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n\r\n    const body = {\r\n      username: updatedUsername,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(userid, body);\r\n      setInEditMode(false);\r\n      if(response.data) {\r\n        setUser(response.data);\r\n        dispatch(updateSuccess(response.data));\r\n      } else {\r\n        const upToDate = {\r\n          ...user,\r\n          username: updatedUsername\r\n        }\r\n        setUser(upToDate)\r\n        dispatch(updateSuccess(upToDate));\r\n      }\r\n    } catch (error) {\r\n      if(error.response.status === 400) {\r\n        setValidationErrors(error.response.data.validationErrors);\r\n      } else {\r\n        setValidationErrors({image: error.response.data.message})\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(id);\r\n    setModalVisible(false);\r\n    dispatch(logoutSuccess());\r\n    history.push('/');\r\n  };\r\n  const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + userid);\r\n\r\n  const { username: usernameError, image: imageError } = validationErrors;\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            <h3>\r\n              {username}\r\n            </h3>\r\n            {editable && (\r\n              <>\r\n                <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                  <i className=\"material-icons\">edit</i>\r\n                  {t('Edit')}\r\n                </button>\r\n                <div className=\"pt-2\">\r\n                  <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                    <i className=\"material-icons\">directions_run</i>\r\n                    {t('Delete My Account')}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Username')}\r\n              defaultValue={username}\r\n              onChange={event => {\r\n                setUpdatedUsername(event.target.value);\r\n              }}\r\n              error={usernameError}\r\n            />\r\n            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setInEditMode(false)} disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete My Account')}\r\n        okButton={t('Delete My Account')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t('Are you sure to delete your account?')}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport { getUser } from '../api/apiCalls';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport HoaxFeed from '../components/HoaxFeed';\r\n\r\nconst UserPage = () => {\r\n  const [user, setUser] = useState({});\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const { userid } = useParams();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress('get', '/api/1.0/users/' + userid, true);\r\n\r\n  useEffect(() => {\r\n    setNotFound(false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        setNotFound(false);\r\n        const response = await getUser(userid);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        setNotFound(true);\r\n      }\r\n    };\r\n    loadUser();\r\n  }, [userid]);\r\n\r\n  if (notFound) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-danger text-center\">\r\n          <div>\r\n            <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n              error\r\n            </i>\r\n          </div>\r\n          {t('User not found')}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line eqeqeq\r\n  if (pendingApiCall || user.id != userid) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <ProfileCard user={user} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <HoaxFeed />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { requestReset } from \"../api/apiCalls\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport Input from \"../components/Input\";\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PasswordResetPage = (props) => {\n  const [email, setEmail] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  const [validationErr, setValidationErr] = useState({});\n  const [successMessage, setSuccessMessage] = useState();\n\n  useEffect(() => {\n    setErrorMessage();\n    setValidationErr({})\n  }, [email])\n  \n  const { t } = useTranslation();\n\n  const pendingApiCall = useApiProgress(\n    \"post\",\n    \"/api/1.0/user/password\",\n    true\n  );\n\n  const onClickReset = async (e) => {\n    e.preventDefault();\n    setErrorMessage();\n    requestReset(email).then(r => {\n      setSuccessMessage(r.data.message);\n    }).catch(e => {\n      setErrorMessage(e.response.data.message);\n      if(e.response.status === 400) {\n        setValidationErr(e.response.data.validationErrors);\n      }\n    })\n  };\n\n  if(successMessage) {\n    return (\n    <div className=\"container\">\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\n        <div className=\"alert alert-success text-center m-0\">\n          <div>\n            <i className=\"material-icons\" style={{ fontSize: '48px' }}>\n              done_outline\n            </i>\n          </div>\n          <span>{successMessage}</span>\n        </div>\n      </div>\n    </div>\n    )\n  }\n\n  let message;\n  if(errorMessage && !validationErr.email){\n    message = (\n      <div className=\"alert alert-danger text-center mt-3 mb-0\">\n      <div>\n        <i className=\"material-icons\" style={{ fontSize: '48px' }}>\n          error\n        </i>\n      </div>\n      {errorMessage}\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\n        <h3 className=\"text-center card-header\">{t('Reset your password')}</h3>\n        <div className=\"card-body\">\n          <form>\n            <Input label={t('E-Mail')} onChange={e => setEmail(e.target.value)} error={validationErr.email} />\n            <div className=\"text-center\">\n              <ButtonWithProgress text={t('Reset')} onClick={onClickReset} disabled={pendingApiCall} pendingApiCall={pendingApiCall}/>\n            </div>\n          </form>\n          {message && message}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetPage;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Input from \"../components/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport { putPassword } from \"../api/apiCalls\";\n\nconst PasswordResetPage = (props) => {\n  const [form, setForm] = useState({\n    password: null,\n    passwordRepeat: null,\n  });\n  const [errors, setErrors] = useState({});\n  const [passwordUpdated, setPasswordUpdated] = useState(false);\n\n  \n  let redirectTimer = useRef();\n\n  useEffect(() => {\n    if(passwordUpdated) {\n       redirectTimer.current = setTimeout(() => {\n        props.history.push(\"/login\");\n      }, 5000);\n    }\n    return function cleanup() {\n      clearTimeout(redirectTimer.current);\n    }\n  }, [passwordUpdated, props.history])\n\n  useEffect(() => {\n    if (!props.location.search) {\n      props.history.push(\"/password-reset-request\");\n    }\n  }, [props.location.search, props.history]);\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n\n    setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }));\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\n  };\n\n  const onClick = async (event) => {\n    event.preventDefault();\n\n    const { password } = form;\n\n    const token = props.location.search.substring(7);\n\n    const body = {\n      password,\n      passwordResetToken: token,\n    };\n    setErrors({});\n\n    try {\n      await putPassword(body);\n      setPasswordUpdated(true);\n    } catch (error) {\n      const errorStatus = error.response.status;\n      if (errorStatus === 400) {\n        // validation\n        setErrors(error.response.data.validationErrors);\n      } else {\n        console.log(error);\n      }\n    }\n  };\n\n  const pendingApiCall = useApiProgress(\"put\", \"/api/1.0/user/password\", true);\n\n  const { t } = useTranslation();\n\n  if (passwordUpdated) {\n    return (\n      <div className=\"container\">\n        <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\n          <div className=\"alert alert-success text-center m-0\">\n            <div>\n              <i className=\"material-icons\" style={{ fontSize: \"48px\" }}>\n                done_outline\n              </i>\n            </div>\n            <span>\n              {t(\n                \"Your password is updated. Page will be redirected to Login Page\"\n              )}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const { password: passwordError } = errors;\n\n  let passwordRepeatError;\n  if (form.password !== form.passwordRepeat) {\n    passwordRepeatError = t(\"Password mismatch\");\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 card p-0 mt-5\">\n        <h3 className=\"text-center card-header\">{t(\"Set New Password\")}</h3>\n        <div className=\"card-body\">\n          <form>\n            <Input\n              name=\"password\"\n              label={t(\"Password\")}\n              error={passwordError}\n              onChange={onChange}\n              type=\"password\"\n            />\n            <Input\n              name=\"passwordRepeat\"\n              label={t(\"Password Repeat\")}\n              error={passwordRepeatError}\n              onChange={onChange}\n              type=\"password\"\n            />\n            <div className=\"text-center\">\n              <ButtonWithProgress\n                onClick={onClick}\n                disabled={pendingApiCall || passwordRepeatError !== undefined}\n                pendingApiCall={pendingApiCall}\n                text={t(\"Set Password\")}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetPage;\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport logo from '../assets/hoaxify.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst TopBar = props => {\r\n  const { t } = useTranslation();\r\n\r\n  const { id, username, isLoggedIn, image } = useSelector(store => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    id: store.id,\r\n    username: store.username,\r\n    image: store.image\r\n  }));\r\n\r\n  const menuArea = useRef(null);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', menuClickTracker);\r\n    return () => {\r\n      document.removeEventListener('click', menuClickTracker);\r\n    };\r\n  }, [isLoggedIn]);\r\n\r\n  const menuClickTracker = event => {\r\n    if (menuArea.current === null || !menuArea.current.contains(event.target)) {\r\n      setMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSuccess());\r\n  };\r\n\r\n  let links = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          {t('Login')}\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/signup\">\r\n          {t('Sign Up')}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  if (isLoggedIn) {\r\n    let dropDownClass = 'dropdown-menu p-0 shadow';\r\n    if (menuVisible) {\r\n      dropDownClass += ' show';\r\n    }\r\n\r\n    links = (\r\n      <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n        <li className=\"nav-item dropdown\">\r\n          <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\" />\r\n            <span className=\"nav-link dropdown-toggle\">{username}</span>\r\n          </div>\r\n          <div className={dropDownClass}>\r\n            <Link className=\"dropdown-item d-flex p-2\" to={`/user/${id}`} onClick={() => setMenuVisible(false)}>\r\n              <i className=\"material-icons text-info mr-2\">person</i>\r\n              {t('My Profile')}\r\n            </Link>\r\n            <span className=\"dropdown-item  d-flex p-2\" onClick={onLogoutSuccess} style={{ cursor: 'pointer' }}>\r\n              <i className=\"material-icons text-danger mr-2\">power_settings_new</i>\r\n              {t('Logout')}\r\n            </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm bg-light mb-2\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} width=\"60\" alt=\"Hoaxify Logo\" />\r\n          Hoaxify\r\n        </Link>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useEffect, useState } from 'react';\nimport UserSignupPage from '../pages/UserSignupPage';\nimport LoginPage from '../pages/LoginPage';\nimport LanguageSelector from '../components/LanguageSelector';\nimport HomePage from '../pages/HomePage';\nimport UserPage from '../pages/UserPage';\nimport PasswordResetRequestPage from '../pages/PasswordResetRequestPage';\nimport PasswordResetPage from '../pages/PasswordResetPage';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport TopBar from '../components/TopBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loginHandler } from '../redux/authActions';\nimport Spinner from '../components/Spinner';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const { email, password, isLoggedIn, token } = useSelector(store => ({\n    email: store.email,\n    password: store.password,\n    isLoggedIn: store.isLoggedIn,\n    token: store.token\n  }));\n\n  const [validatingLogin, setValidatingLogin] = useState(true);\n\n\n  useEffect(() => {\n    if(isLoggedIn && token) {\n      const creds = {\n        email,\n        password\n      };\n      dispatch(loginHandler(creds)).then(s => setValidatingLogin(false)).catch(c => setValidatingLogin(false));\n    } else {\n      setValidatingLogin(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if(validatingLogin){\n    return <Spinner />\n  }\n\n  return (\n    <div>\n      <Router>\n        <TopBar />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}\n          <Route path=\"/signup\" component={UserSignupPage} />\n          <Route path=\"/user/:userid\" component={UserPage} />\n          <Route path=\"/password-reset-request\" component={PasswordResetRequestPage} />\n          <Route path=\"/password-reset\" component={PasswordResetPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n      <LanguageSelector />\n    </div>\n  );\n};\n\nexport default App;\n","import * as ACTIONS from './Constants';\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  id: undefined,\r\n  username: undefined,\r\n  email: undefined,\r\n  image: undefined,\r\n  password: undefined,\r\n  token: undefined\r\n};\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLs.get('hoax-auth');\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    email: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n    return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n  secureLs.set('hoax-auth', newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { register } from 'timeago.js';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n.use(initReactI18next).use(Backend).init({\r\n  // resources: {\r\n  //   en: {\r\n  //     translations: {\r\n  //       'Sign Up': 'Sign Up',\r\n  //       'Password mismatch': 'Password mismatch',\r\n  //       Username: 'Username',\r\n  //       'E-mail': 'E-Mail',\r\n  //       Password: 'Password',\r\n  //       'Password Repeat': 'Password Repeat',\r\n  //       'E-mail verification failure': 'E-mail verification failure',\r\n  //       'Activation E-mail sent': 'An account activation e-mail is sent to {{address}}',\r\n  //       Login: 'Login',\r\n  //       'Account activation failure': 'Account activation failed',\r\n  //       'Activation in progress': 'Activation in progress',\r\n  //       'Your account is activated': 'Your account is activated',\r\n  //       Logout: 'Logout',\r\n  //       Users: 'Users',\r\n  //       Next: 'next >',\r\n  //       Previous: '< previous',\r\n  //       'Load Failure': 'Load Failure',\r\n  //       'User not found': 'User not found',\r\n  //       Edit: 'Edit',\r\n  //       'Change Username': 'Change Username',\r\n  //       Save: 'Save',\r\n  //       Cancel: 'Cancel',\r\n  //       'My Profile': 'My Profile',\r\n  //       'There are no hoaxes': 'There are no hoaxes',\r\n  //       'Load old hoaxes': 'Load old hoaxes',\r\n  //       'There are new hoaxes': 'There are new hoaxes',\r\n  //       'Delete Hoax': 'Delete Hoax',\r\n  //       'Are you sure to delete hoax?': 'Are you sure to delete hoax?',\r\n  //       'Delete My Account': 'Delete My Account',\r\n  //       'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n  //     }\r\n  //   },\r\n  //   tr: {\r\n  //     translations: {\r\n  //       'Sign Up': 'Kayıt Ol',\r\n  //       'Password mismatch': 'Aynı şifreyi giriniz',\r\n  //       Username: 'Kullanıcı Adı',\r\n  //       'E-mail': 'E-Posta',\r\n  //       Password: 'Şifre',\r\n  //       'E-mail verification failure': 'E-posta adresiniz doğrulanamadı',\r\n  //       'Activation E-mail sent': 'Hesabınızı aktifleştirmek için e-posta adresiniz {{address}} i kontrol edin',\r\n  //       'Password Repeat': 'Şifreyi Tekrarla',\r\n  //       Login: 'Sisteme Gir',\r\n  //       'Account activation failure': 'Hesabınız aktifleştirilemedi',\r\n  //       'Activation in progress': 'Hesabınız aktifleştiriliyor',\r\n  //       'Your account is activated': 'Hesabınız aktifleştirilmiştir',\r\n  //       Logout: 'Çık',\r\n  //       Users: 'Kullanıcılar',\r\n  //       Next: 'sonraki >',\r\n  //       Previous: '< önceki',\r\n  //       'Load Failure': 'Liste alınamadı',\r\n  //       'User not found': 'Kullanıcı bulunamadı',\r\n  //       Edit: 'Düzenle',\r\n  //       'Change Username': 'Kullanıcı adınızı değiştirin',\r\n  //       Save: 'Kaydet',\r\n  //       Cancel: 'İptal Et',\r\n  //       'My Profile': 'Hesabım',\r\n  //       'There are no hoaxes': 'Hoax bulunamadı',\r\n  //       'Load old hoaxes': 'Geçmiş Hoaxları getir',\r\n  //       'There are new hoaxes': 'Yeni Hoaxlar var',\r\n  //       'Delete Hoax': `Hoax'u sil`,\r\n  //       'Are you sure to delete hoax?': `Hoax'u silmek istedğinizden emin misiniz?`,\r\n  //       'Delete My Account': 'Hesabımı Sil',\r\n  //       'Are you sure to delete your account?': 'Hesabınızı silmek istediğinizden emin misiniz?'\r\n  //     }\r\n  //   }\r\n  // },\r\n  fallbackLng: 'en',\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: ','\r\n  },\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nconst timeagoTR = (number, index) => {\r\n  return [\r\n    ['az önce', 'şimdi'],\r\n    ['%s saniye önce', '%s saniye içinde'],\r\n    ['1 dakika önce', '1 dakika içinde'],\r\n    ['%s dakika önce', '%s dakika içinde'],\r\n    ['1 saat önce', '1 saat içinde'],\r\n    ['%s saat önce', '%s saat içinde'],\r\n    ['1 gün önce', '1 gün içinde'],\r\n    ['%s gün önce', '%s gün içinde'],\r\n    ['1 hafta önce', '1 hafta içinde'],\r\n    ['%s hafta önce', '%s hafta içinde'],\r\n    ['1 ay önce', '1 ay içinde'],\r\n    ['%s ay önce', '%s ay içinde'],\r\n    ['1 yıl önce', '1 yıl içinde'],\r\n    ['%s yıl önce', '%s yıl içinde']\r\n  ][index];\r\n};\r\nregister('tr', timeagoTR);\r\n\r\nexport default i18n;\r\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from './container/App';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport './i18n';\n\nconst store = configureStore();\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback=\"loading\">\n      <App />\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}